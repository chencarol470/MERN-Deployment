{"version":3,"sources":["views/Pets.js","views/Pet.js","views/NewPet.js","views/EditPets.js","App.js","reportWebVitals.js","index.js"],"names":["Pets","props","useState","allPets","setAllPets","useEffect","axios","get","then","res","data","catch","err","console","log","response","to","style","color","marginLeft","display","boxShadow","padding","boxborder","backgroundColor","map","pet","name","type","_id","className","Pet","setPet","id","useParams","history","useHistory","error","onClick","e","delId","delete","push","description","skill1","skill2","skill3","likedPet","editedPet","likeCount","put","updatedPet","handleLikeClick","cursor","NewPet","setName","setType","setDescription","setSkill1","setSkill2","setSkill3","errors","setErrors","onSubmit","preventDefault","newPet","post","handleNewSubmit","message","onChange","target","value","EditPets","p","setP","handleOnChange","handleEditSubmit","justifyContent","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e319edb.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nconst Pets = (props) => {\n    const [allPets, setAllPets] = useState([]);\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/pets`)\n            .then((res) => {\n                // console.log(res.data);\n                setAllPets(res.data);\n            })\n            .catch((err) => {\n                console.log(err.response);\n            });\n    }, []);\n\n\n    return (\n        <div>\n            <nav>\n                <div>\n                    <h1>Pet Shelter</h1>\n                </div>\n                <div>\n                    <Link to=\"/pets/new\">\n                        Add a pet to the shelter\n                    </Link>\n                </div>\n            </nav>\n            <p>These pets are looking for a good home </p>\n            <div>\n                <table style={{ color: \"purple\", marginLeft: \"600px\", display: \"center\", boxShadow: \"initial\", padding: \"10px\", boxborder: \"solid, black\" }}>\n                    <thead style={{ backgroundColor: \"yellow\" }}>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {/* .map is a for loop to render all bunch of thing in JSX */}\n                        {allPets.map((pet) => {\n                            return (\n                                <tr key={pet._id}>\n                                    <td>{pet.name}</td>\n                                    <td>{pet.type}</td>\n                                    <td>\n                                        <nav>\n                                            <Link\n                                                to={`/pets/${pet._id}`}\n                                                className=\"btn btn-sm btn-outline-warning mx-1\"\n                                            >\n                                                details\n                                            </Link>\n                                            {\" \"} | {\" \"}\n                                            <Link\n                                                to={`/pets/${pet._id}/edit`}\n                                                className=\"btn btn-sm btn-outline-warning mx-1\"\n                                            >\n                                                edit\n                                            </Link>\n                                        </nav>\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                    </tbody >\n                </table >\n            </div>\n        </div >\n    )\n}\n\nexport default Pets;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useHistory, Link } from 'react-router-dom';\n\n\nconst Pet = () => {\n\n    const [pet, setPet] = useState({});\n    // const [pets, setPets] = useState([]);\n    const { id } = useParams();\n    // const [products, setProducts] = useState([]);\n    const history = useHistory();\n\n\n\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/pets/' + id)\n            .then(res => {\n                setPet(res.data)\n                console.log(res.data)\n            })\n\n\n            .catch(err => console.error(err));\n    }, [id]);\n    const handleDelete = ((delId) => {\n        axios\n            .delete(`http://localhost:8000/api/pets/${delId}`)\n            .then((res) => {\n                console.log(res)\n            })\n            .catch(err =>\n                console.log(err));\n        let path = \"\";\n        history.push(path);\n    })\n    const handleLikeClick = (likedPet) => {\n        const editedPet = { likeCount: likedPet.likeCount + 1 };\n\n        axios\n            .put(\n                \"http://localhost:8000/api/pets/\" + likedPet._id,\n                editedPet\n            )\n            .then((res) => {\n                const updatedPet = res.data;\n\n                // const updatedPets = pets.map((p) => {\n                //     if (p._id === updatedPet._id) {\n                //         // replace only the updated article.\n                //         return updatedPet;\n                //     }\n                //     return pet;\n                // });\n\n                setPet(updatedPet);\n                // console.log(\"liked\");\n            })\n            .catch((err) => {\n                console.log(err.response);\n            });\n    };\n\n    return (\n        <>\n            <nav>\n                <div>\n                    <h1>Pet Shelter</h1>\n                    <Link to=\"/\">\n                        back to home\n                    </Link>\n                </div>\n            </nav>\n            <nav>\n                <h2>Details about: {pet.name}</h2>\n                <button onClick={(e) => {\n                    handleDelete(pet._id);\n                }}>\n                    Adopt {pet.name}\n                </button>\n            </nav>\n            <div>\n                <p>Name: {pet.name}</p>\n                <p>Type: {pet.type}</p>\n                <p>Description: {pet.description}</p>\n                <p>Skills : </p>\n                <p>{pet.skill1}</p>\n                <p>{pet.skill2}</p>\n                <p>{pet.skill3}</p>\n            </div>\n            <p>\n                <span onClick={(e) => {\n                    handleLikeClick(pet);\n                }}\n                    style={{ cursor: \"pointer\" }}\n                >\n                    👍{pet.likeCount}\n                </span>\n            </p>\n        </>\n    )\n}\n\nexport default Pet;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory, Link } from 'react-router-dom';\n\nconst NewPet = (props) => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skill1, setSkill1] = useState(\"\");\n    const [skill2, setSkill2] = useState(\"\");\n    const [skill3, setSkill3] = useState(\"\");\n\n    const history = useHistory();\n    const [errors, setErrors] = useState(null);\n\n    const handleNewSubmit = (e) => {\n        e.preventDefault();\n        const newPet = {\n            name,\n            type,\n            description,\n            skill1,\n            skill2,\n            skill3,\n        };\n\n        axios.post(`http://localhost:8000/api/pets`, newPet)\n            .then((res) => {\n                console.log(res.data);\n                history.push(``)\n            })\n            .catch((err) => {\n                setErrors(err.response.data.errors)\n            });\n    };\n\n\n    return (\n        <div>\n            <nav>\n                <h1>Pet Shelter</h1>\n                <Link to=\"/\">\n                    back to home\n                </Link>\n            </nav>\n            <h3>Know a pet needing a home?</h3>\n            <form onSubmit={(e) => {\n                handleNewSubmit(e);\n            }}>\n                <div>\n                    <label> Name: </label>\n                    <br />\n                    {errors?.name && (<span style={{ color: 'red' }}>{errors?.name?.message}</span>)}\n                    <input onChange={(e) => {\n                        setName(e.target.value)\n                    }} type=\"text\" />\n                </div>\n                <div>\n                    <label> Type: </label>\n                    <br />\n                    {errors?.type && (<span style={{ color: 'red' }}>{errors?.type?.message}</span>)}\n                    <input onChange={(e) => {\n                        setType(e.target.value)\n                    }} type=\"text\" />\n                </div>\n                <div>\n                    <label> Description: </label>\n                    <br />\n                    {errors?.description && (<span style={{ color: 'red' }}>{errors?.description?.message}</span>)}\n                    <input onChange={(e) => {\n                        setDescription(e.target.value)\n                    }} type=\"text\" />\n                </div>\n                <div>\n                    <label> Skill1: </label>\n                    <br />\n                    <input onChange={(e) => {\n                        setSkill1(e.target.value)\n                    }} type=\"text\" />\n                </div>\n                <div>\n                    <label> Skill2: </label>\n                    <br />\n                    <input onChange={(e) => {\n                        setSkill2(e.target.value)\n                    }} type=\"text\" />\n                </div>\n                <div>\n                    <label> Skill3: </label>\n                    <br />\n                    <input onChange={(e) => {\n                        setSkill3(e.target.value)\n                    }} type=\"text\" />\n                </div>\n                <button type=\"submit\">\n                    ⇪Add Pet\n                </button>\n            </form>\n        </div>\n    )\n};\n\nexport default NewPet;","import React, { useState, useEffect } from 'react';\nimport { useHistory, useParams, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst EditPets = (props) => {\n    const [p, setP] = useState(null);\n    const [errors, setErrors] = useState(null);\n    const history = useHistory();\n    const { id } = useParams();\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/pets/${id}`)\n            .then((res) => {\n                setP(res.data)\n            })\n            .catch((err) => {\n                console.log(err.response);\n            });\n    }, [id]\n    );\n    const handleOnChange = (e) => {\n        setP({ ...p, [e.target.name]: e.target.value });\n        console.log(handleOnChange);\n    }\n\n    const handleEditSubmit = (e) => {\n        e.preventDefault();\n\n        axios.put(`http://localhost:8000/api/pets/${p._id}`, p)\n            .then((res) => {\n                console.log(res.data);\n                history.push(``);\n            })\n            .catch((err) => {\n                setErrors(err.response.data.errors);\n            });\n\n    }\n    if (p === null) {\n        return \"Loading...\"\n    }\n    return (\n        <div>\n            <span>\n                <h2>Pet Shelter</h2>\n                <Link to=\"/\">\n                    back to home\n                </Link>\n            </span>\n            <form onSubmit={(e) => {\n                handleEditSubmit(e);\n            }}>\n                <h2>Edit {p.name}</h2>\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <div>\n                        <div>\n                            <label>Pet Name:</label>\n                            {errors?.name && (<span style={{ color: \"red\" }}>{errors?.name?.message}</span>)}\n                            <input onChange={(e) => {\n                                handleOnChange(e);\n                            }}\n                                type=\"text\"\n                                value={p.name}\n                                name=\"name\"\n                            />\n                        </div>\n                        <div>\n                            <label>Pet Type:</label>\n                            {errors?.type && (<span style={{ color: \"red\" }}>{errors?.type?.message}</span>)}\n                            <input onChange={(e) => {\n                                handleOnChange(e);\n                            }}\n                                type=\"text\"\n                                value={p.type}\n                                name=\"type\"\n                            />\n                        </div>\n                        <div>\n                            <label>Description: </label>\n                            {errors?.description && (<span style={{ color: \"red\" }}>{errors?.description?.message}</span>)}\n                            <input onChange={(e) => {\n                                handleOnChange(e);\n                            }}\n                                type=\"text\"\n                                value={p.description}\n                                name=\"description\"\n                            />\n                        </div>\n                        <button>Edit Pet</button>\n                    </div>\n                    <div>\n                        <div>\n                            <div>\n                                <label>Skills (Optional) : </label>\n                            </div>\n                            <label>Skill 1: </label>\n                            <input onChange={(e) => {\n                                handleOnChange(e);\n                            }}\n                                type=\"text\"\n                                value={p.skill1}\n                                name=\"skill1\"\n                            />\n                        </div>\n                        <div>\n                            <label>Skill 2: </label>\n                            <input onChange={(e) => {\n                                handleOnChange(e);\n                            }}\n                                type=\"text\"\n                                value={p.skill2}\n                                name=\"skill2\"\n                            />\n                        </div>\n                        <div>\n                            <label>Skill 3: </label>\n                            <input onChange={(e) => {\n                                handleOnChange(e);\n                            }}\n                                type=\"text\"\n                                value={p.skill3}\n                                name=\"skill3\"\n                            />\n                        </div>\n                    </div>\n                </div>\n\n            </form>\n        </div>\n    )\n}\n\nexport default EditPets;","import './App.css';\nimport React from 'react';\nimport \"./App.css\";\nimport { Route, Switch } from 'react-router-dom';\nimport Pets from './views/Pets';\nimport Pet from './views/Pet';\nimport NewPet from './views/NewPet';\nimport EditPets from './views/EditPets';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Pets />\n        </Route>\n        <Route exact path=\"/pets/new\">\n          <NewPet />\n        </Route>\n        <Route exact path=\"/pets/:id\">\n          <Pet />\n        </Route>\n        <Route exact path=\"/pets/:id/edit\">\n          <EditPets />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}